# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env: 
      BROWSERSTACK_SESSION_ID: '1234'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4.4.0
        with:
          python-version: '3.10' 

      - name: 'BrowserStack Env Setup'
        uses: 'browserstack/github-actions/setup-env@master'
        with:
          username:  ${{ secrets.BROWSERSTACK_USERNAME }}
          access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      - name: Run jq
        uses: sergeysova/jq-action@v2
      
      - name: Smoke Tests
        run: pytest test_smoke_sentur_android.py --html=Report.html --self-contained-html --capture=tee-sys --junitxml=Report.xml -v
          
      - name: HTML Preview
        id: html_preview_android
        uses: pavi2410/html-preview-action@v2
        with:
          html_file: 'Report.html' 
      
      - name: Print HTML Link
        run: |
          echo '${{ steps.html_preview_android.outputs.url }}'
          
      # BrowserStack Session ID is updated from python tests
      - name: Read file contents
        id: read_file_android
        uses: andstor/file-reader-action@v1
        with:
          path: "session_id.txt"
          
      - name: Get Browserstack Report URL
        id: report_url_android
        run: |
          echo | 
          curl -u "${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }}" \
          -X GET "https://api-cloud.browserstack.com/app-automate/sessions/${{ steps.read_file_android.outputs.contents }}.json" \
          | jq -r '.automation_session.public_url' > public_url.txt
          
      - name: Read file contents
        id: read_file_public_url_android
        uses: andstor/file-reader-action@v1
        with:
          path: "public_url.txt"
          
      - name: Browserstack Report Link - Android
        #run: echo "Click here to view the report:[Browserstack Report Link](${{ steps.read_file_public_url_android.outputs.contents }})"
        run: echo '<a href=${{ steps.read_file_public_url_android.outputs.contents }}>Browserstack Report</a>'

          
      - name: Publish Test Results - Android
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: "*.xml"
          
###############################################
###############################################
      - name: Smoke Tests
        run: pytest test_smoke_sentur_ios.py --html=Report.html --self-contained-html --capture=tee-sys --junitxml=Report.xml -v
          
      - name: HTML Preview
        id: html_preview_ios
        uses: pavi2410/html-preview-action@v2
        with:
          html_file: 'Report.html' 
      
      - name: Print HTML Link
        run: |
          echo '${{ steps.html_preview_ios.outputs.url }}'
          
      # BrowserStack Session ID is updated from python tests
      - name: Read file contents
        id: read_file_ios
        uses: andstor/file-reader-action@v1
        with:
          path: "session_id.txt"
          
      - name: Get Browserstack Report URL
        id: report_url_ios
        run: |
          echo | 
          curl -u "${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }}" \
          -X GET "https://api-cloud.browserstack.com/app-automate/sessions/${{ steps.read_file_ios.outputs.contents }}.json" \
          | jq -r '.automation_session.public_url' > public_url.txt
          
      - name: Read file contents
        id: read_file_public_url_ios
        uses: andstor/file-reader-action@v1
        with:
          path: "public_url.txt"
          
      - name: Browserstack Report Link - iOS
        #run: echo "Click here to view the report:[Browserstack Report Link](${{ steps.read_file_public_url_ios.outputs.contents }})"
        run: echo '<a href=${{ steps.read_file_public_url_ios.outputs.contents }}>Browserstack Report</a>'

          
      - name: Publish Test Results - iOS
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: "*.xml"
